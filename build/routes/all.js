"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const koa_router_1=__importDefault(require("koa-router")),dataAccess_1=require("../db/dataAccess"),constants_1=require("../constants"),utils_1=require("../utils/"),query_1=require("../query/"),_helpers_1=require("./_helpers"),fs_1=__importDefault(require("fs")),createDB_1=require("../db/createDB"),router=new koa_router_1.default;router.get("/(.*)",async e=>{var t;if(e.request.url.endsWith(`/${process.env.APIVERSION}/`)){const t=[{}];Object.keys(constants_1._DBDATAS).filter(e=>constants_1._DBDATAS[e].order>0).sort((e,t)=>constants_1._DBDATAS[e].order>constants_1._DBDATAS[t].order?1:-1).forEach(s=>{t.push({name:constants_1._DBDATAS[s].name,url:`http://${(0,utils_1.getHostName)(e)}/${process.env.APIVERSION}/${s}`})}),e.type=constants_1.returnFormat[constants_1.formatsResult.JSON],e.body={value:t.filter(e=>Object.keys(e).length)}}else if(e.request.url.toLowerCase().includes("/query"))e.type=constants_1.returnFormat[constants_1.formatsResult.HTML],e.body=(0,query_1.queryHtml)((0,query_1.minimalForHtmlQuery)(e));else if(e.request.url.toLowerCase().endsWith("favicon.ico"))try{const t=fs_1.default.readFileSync(__dirname+"/favicon.ico"),s="public, max-age=8640";e.set("Cache-Control",s),e.type=constants_1.returnFormat[constants_1.formatsResult.ICON],e.body=t}catch(e){e instanceof Error&&(0,utils_1.message)("ERROR",e.message)}else if(e.request.url.includes(`/${process.env.APIVERSION}/`)){const s=await(0,utils_1.urlRequestToArgs)(e);if(s&&""!=s.ENTITY_NAME){s.debug&&(0,utils_1.message)("HEAD","GET "+process.env.APIVERSION);const r=new dataAccess_1.apiAccess(e,s);if(r)if(0===Number(s.ENTITY_ID)){const a=await r.getAll();if(a){const r=s.formatResult==constants_1.formatsResult.JSON?{"@iot.count":null===(t=a.id)||void 0===t?void 0:t.toString(),"@iot.nextLink":a.nextLink,"@iot.prevLink":a.prevLink,value:a.value}:e.body=a.value;e.type=constants_1.returnFormat[s.formatResult],e.body=(0,utils_1.resultBody)(s,r)}else e.throw(404)}else if(s.ENTITY_ID&&s.ENTITY_ID>0){const t=await r.getSingle(BigInt(s.ENTITY_ID),s.PROPERTY_NAME,s.RELATION_NAME,s.value);t&&t.body?(e.type=constants_1.returnFormat[s.formatResult],e.body=(0,utils_1.resultBody)(s,t.body)):e.throw(404,{detail:`id : ${s.ENTITY_ID} not found`})}else e.throw(400)}else e.throw(400,{detail:"No entity found"})}else e.throw(501)}),router.post("/(.*)",async e=>{if(_helpers_1.helperUsers.ensureAuthenticated(e))if(e.request.type.startsWith("application/json")&&Object.keys(e.request.body).length>0){const t=await(0,utils_1.urlRequestToArgs)(e);if(t)if("createDB"==t.ENTITY_NAME&&e){t.debug&&(0,utils_1.message)("HEAD","POST createDB");const s={host:e.request.body.host,user:e.request.body.user,password:e.request.body.password,database:e.request.body.database,port:Number(process.env.PGPORT)},r=await(0,createDB_1.createDB)(s,e);constants_1.returnFormat[constants_1.formatsResult.JSON],e.body=r}else{t.debug&&(0,utils_1.message)("HEAD","POST JSON");const s=new dataAccess_1.apiAccess(e,t),r=await s.add();r&&(constants_1.returnFormat[constants_1.formatsResult.JSON],e.status=201,e.body=r.result?r.result:r.value)}else e.throw(400)}else if(e.request.type.startsWith("multipart/form-data")){const t=async()=>new Promise(async(t,s)=>{await(0,utils_1.upload)(e).then(e=>{t(e)}).catch(e=>{s(e)})}),s=await t(),r=await(0,utils_1.urlRequestToArgs)(e,s);if(r){r.debug&&(0,utils_1.message)("HEAD","POST FORM");const t=new dataAccess_1.apiAccess(e,r),a=await t.add();r.extras&&fs_1.default.unlinkSync(r.extras.file),a?"query"==s.source?(e.type="html",e.body=(0,query_1.queryHtml)(Object.assign(Object.assign({},(0,query_1.minimalForHtmlQuery)(e)),{results:JSON.stringify({added:a.total,value:a.result})}))):(constants_1.returnFormat[constants_1.formatsResult.JSON],e.status=201,e.body=a.result?a.result:a.value):e.throw(400)}}else e.throw(400,{details:"Payload is malformed"});else e.throw(401)}),router.patch("/(.*)",async e=>{if(_helpers_1.helperUsers.ensureAuthenticated(e)){if(Object.keys(e.request.body).length>0){const t=await(0,utils_1.urlRequestToArgs)(e);if(t){t.debug&&(0,utils_1.message)("HEAD","PATCH");const s=new dataAccess_1.apiAccess(e,t);if(t.ENTITY_ID){const r=isNaN(Number(t.ENTITY_ID))?void 0:await s.update(BigInt(t.ENTITY_ID));r&&(constants_1.returnFormat[constants_1.formatsResult.JSON],e.status=200,e.body=r.value)}else e.throw(400,{detail:"Id is required"})}else e.throw(404)}}else e.throw(401)}),router.delete("/(.*)",async e=>{if(_helpers_1.helperUsers.ensureAuthenticated(e)){const t=await(0,utils_1.urlRequestToArgs)(e);if(t){t.debug&&(0,utils_1.message)("HEAD","DELETE");const s=new dataAccess_1.apiAccess(e,t);if(t&&t.ENTITY_ID){const r=await s.delete(BigInt(t.ENTITY_ID));r&&r.id&&r.id>0?(constants_1.returnFormat[constants_1.formatsResult.JSON],e.status=204):e.throw(404)}else e.throw(400,{detail:"Id is required"})}else e.throw(404)}else e.throw(401)}),exports.default=router.routes();